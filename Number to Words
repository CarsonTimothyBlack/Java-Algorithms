--PROBLEM--
Write a method that takes a given number and prints out that number in words.

Eg. 8765 prints out "Eight", "Seven", "Six", "Five".

The solution uses three different methods that combine to fulfill certain conditions. One takes the given number and reverses it.
The other counts how many digits are in a given number. Finally the number printer uses both of these methods to write out the number.

--SOLUTION--
public static void numberToWords(int number) {
        if(number < 0) {
            System.out.println("Invalid Value");
        } else if(number == 0) {
            System.out.println("Zero");
        } else {
            int reverseNum = reverse(number);
            while(reverseNum > 0) {
                switch(reverseNum % 10) {
                    case 0:
                        System.out.println("Zero");
                        break;
                    case 1:
                        System.out.println("One");
                        break;
                    case 2:
                        System.out.println("Two");
                        break;
                    case 3:
                        System.out.println("Three");
                        break;
                    case 4:
                        System.out.println("Four");
                        break;
                    case 5:
                        System.out.println("Five");
                        break;
                    case 6:
                        System.out.println("Six");
                        break;
                    case 7:
                        System.out.println("Seven");
                        break;
                    case 8:
                        System.out.println("Eight");
                        break;
                    case 9:
                        System.out.println("Nine");
                        break;
                } reverseNum /= 10;
            }
            for(int i = 0; i < getDigitCount(number) - getDigitCount(reverse(number)); i++) {
                System.out.println("Zero");
            }
        }
    }

    public static int reverse(int number) {
        int newNumb = 0;
        int place = 0;
        if(number < 0) {
            number *= -1;
            place = 1;
        }
        while(number > 0) {
            newNumb *= 10;
            newNumb += number % 10;
            number /= 10;
        }
        if(place == 1) {
            newNumb *= -1;
        }
        return newNumb;
    }

    public static int getDigitCount(int number) {
        if(number < 0) {
            return -1;
        } else if(number == 0) {
            return 1;
        }
        int count = 0;
        while(number > 0) {
            number /= 10;
            count++;
        }
        return count;
    }
